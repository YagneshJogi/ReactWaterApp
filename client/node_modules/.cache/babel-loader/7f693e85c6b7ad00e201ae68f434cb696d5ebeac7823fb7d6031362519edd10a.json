{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yagnesh\\\\Desktop\\\\ReactWater\\\\client\\\\src\\\\components\\\\SystemInfo.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c = Container;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(8px);\n  border-radius: 8px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n`;\n_c2 = Card;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #2563eb;\n  margin-bottom: 1rem;\n`;\n_c3 = Title;\nconst Text = styled.p`\n  font-size: 1.125rem;\n  color: #4b5563;\n  margin-bottom: 1rem;\n`;\n_c4 = Text;\nconst List = styled.ul`\n  list-style-type: disc;\n  padding-left: 1.5rem;\n  margin-top: 1rem;\n  color: #4b5563;\n\n  li {\n    margin: 0.5rem 0;\n  }\n`;\n_c5 = List;\nconst SubTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 500;\n  color: #374151;\n  margin: 1.5rem 0 1rem;\n`;\n_c6 = SubTitle;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1rem 0;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(4px);\n  border-radius: 4px;\n`;\n_c7 = Table;\nconst Th = styled.th`\n  text-align: left;\n  padding: 0.75rem;\n  background: rgba(243, 244, 246, 0.8);\n  border-bottom: 2px solid rgba(229, 231, 235, 0.8);\n`;\n_c8 = Th;\nconst Td = styled.td`\n  padding: 0.75rem;\n  border-bottom: 1px solid rgba(229, 231, 235, 0.8);\n`;\n_c9 = Td;\nconst SystemInfo = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"System Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"This project is a real-time IoT-based water quality monitoring system designed using the ESP32 microcontroller. It continuously monitors and displays four key parameters that indicate water health:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperature (via DS18B20 sensor)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"TDS (Total Dissolved Solids)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Dissolved Oxygen (DO)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Turbidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sensor Integration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"DS18B20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Provides accurate temperature readings which are essential for compensating other sensor outputs like TDS and DO.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"TDS Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Measures the total dissolved solids in water using a median filter for stability, and applies temperature compensation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"DO Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Calculates dissolved oxygen using a voltage-to-DO conversion based on a temperature-dependent saturation table.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"Turbidity Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Outputs raw ADC values, which are converted to NTU (Nephelometric Turbidity Units) using two calibration methods:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"A linear model based on manual calibration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"A quadratic model derived from manufacturer data for improved accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sensor data is read in real-time and processed using ESP32's 12-bit ADC resolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Each reading is printed to the serial monitor for easy debugging or integration with external dashboards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Code is optimized with averaging, filtering, and compensation for real-world accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Environmental water quality testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Aquaculture farms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Smart irrigation systems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Research and educational purposes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Hardware Implementation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"The water quality monitoring system is built around the ESP32 microcontroller, chosen for its powerful processing capabilities and integrated Wi-Fi/Bluetooth, making it ideal for IoT applications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        children: \"Components Used:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"ESP32 Dev Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"DS18B20 Waterproof Temperature Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"TDS Sensor Module\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Dissolved Oxygen (DO) Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Turbidity Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Resistors, Wires, and Breadboard/PCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Power Supply (Battery or USB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        children: \"Sensor Connections:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"ESP32 Pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"DS18B20 (Temp)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"GPIO 25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"1-wire protocol, needs 4.7k\\u03A9 pull-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"TDS Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"GPIO 35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"Analog input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"DO Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"GPIO 34\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"Analog input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"Turbidity Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"GPIO 32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: \"Analog input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        children: \"Setup Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Connect sensors to the specified GPIO pins on the ESP32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Power the sensors using the 3.3V or 5V rail, depending on individual requirements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use the temperature sensor for real-time compensation of TDS and DO readings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Apply signal conditioning in the code using averaging filters and calibration equations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"View all sensor readings in real-time using the serial monitor for debugging and analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        children: \"Calibration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The turbidity sensor is calibrated using both manual testing and a quadratic model for increased accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The TDS sensor uses a polynomial equation with built-in temperature correction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The DO sensor is calibrated using a two-point method and a temperature-dependent DO saturation table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c10 = SystemInfo;\nexport default SystemInfo;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"List\");\n$RefreshReg$(_c6, \"SubTitle\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"Th\");\n$RefreshReg$(_c9, \"Td\");\n$RefreshReg$(_c10, \"SystemInfo\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Container","div","_c","Card","_c2","Title","h2","_c3","Text","p","_c4","List","ul","_c5","SubTitle","h3","_c6","Table","table","_c7","Th","th","_c8","Td","td","_c9","SystemInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","_c10","$RefreshReg$"],"sources":["C:/Users/Yagnesh/Desktop/ReactWater/client/src/components/SystemInfo.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(8px);\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2563eb;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1.125rem;\r\n  color: #4b5563;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: disc;\r\n  padding-left: 1.5rem;\r\n  margin-top: 1rem;\r\n  color: #4b5563;\r\n\r\n  li {\r\n    margin: 0.5rem 0;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n  color: #374151;\r\n  margin: 1.5rem 0 1rem;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 1rem 0;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  backdrop-filter: blur(4px);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  text-align: left;\r\n  padding: 0.75rem;\r\n  background: rgba(243, 244, 246, 0.8);\r\n  border-bottom: 2px solid rgba(229, 231, 235, 0.8);\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid rgba(229, 231, 235, 0.8);\r\n`;\r\n\r\nconst SystemInfo = () => {\r\n  return (\r\n    <Container>\r\n      {/* Overview Section */}\r\n      <Card>\r\n        <Title>System Overview</Title>\r\n        <Text>\r\n          This project is a real-time IoT-based water quality monitoring system designed using the ESP32 microcontroller. \r\n          It continuously monitors and displays four key parameters that indicate water health:\r\n        </Text>\r\n        <List>\r\n          <li>Temperature (via DS18B20 sensor)</li>\r\n          <li>TDS (Total Dissolved Solids)</li>\r\n          <li>Dissolved Oxygen (DO)</li>\r\n          <li>Turbidity</li>\r\n        </List>\r\n      </Card>\r\n\r\n      {/* Sensor Integration Section */}\r\n      <Card>\r\n        <Title>Sensor Integration</Title>\r\n        <div>\r\n          <SubTitle>DS18B20</SubTitle>\r\n          <Text>Provides accurate temperature readings which are essential for compensating other sensor outputs like TDS and DO.</Text>\r\n          \r\n          <SubTitle>TDS Sensor</SubTitle>\r\n          <Text>Measures the total dissolved solids in water using a median filter for stability, and applies temperature compensation.</Text>\r\n          \r\n          <SubTitle>DO Sensor</SubTitle>\r\n          <Text>Calculates dissolved oxygen using a voltage-to-DO conversion based on a temperature-dependent saturation table.</Text>\r\n          \r\n          <SubTitle>Turbidity Sensor</SubTitle>\r\n          <Text>Outputs raw ADC values, which are converted to NTU (Nephelometric Turbidity Units) using two calibration methods:</Text>\r\n          <List>\r\n            <li>A linear model based on manual calibration</li>\r\n            <li>A quadratic model derived from manufacturer data for improved accuracy</li>\r\n          </List>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Features Section */}\r\n      <Card>\r\n        <Title>Features</Title>\r\n        <List>\r\n          <li>Sensor data is read in real-time and processed using ESP32's 12-bit ADC resolution</li>\r\n          <li>Each reading is printed to the serial monitor for easy debugging or integration with external dashboards</li>\r\n          <li>Code is optimized with averaging, filtering, and compensation for real-world accuracy</li>\r\n        </List>\r\n      </Card>\r\n\r\n      {/* Applications Section */}\r\n      <Card>\r\n        <Title>Applications</Title>\r\n        <List>\r\n          <li>Environmental water quality testing</li>\r\n          <li>Aquaculture farms</li>\r\n          <li>Smart irrigation systems</li>\r\n          <li>Research and educational purposes</li>\r\n        </List>\r\n      </Card>\r\n\r\n      {/* Hardware Implementation Section */}\r\n      <Card>\r\n        <Title>Hardware Implementation</Title>\r\n        <Text>\r\n          The water quality monitoring system is built around the ESP32 microcontroller, chosen for its powerful processing capabilities \r\n          and integrated Wi-Fi/Bluetooth, making it ideal for IoT applications.\r\n        </Text>\r\n        \r\n        <SubTitle>Components Used:</SubTitle>\r\n        <List>\r\n          <li>ESP32 Dev Board</li>\r\n          <li>DS18B20 Waterproof Temperature Sensor</li>\r\n          <li>TDS Sensor Module</li>\r\n          <li>Dissolved Oxygen (DO) Sensor</li>\r\n          <li>Turbidity Sensor</li>\r\n          <li>Resistors, Wires, and Breadboard/PCB</li>\r\n          <li>Power Supply (Battery or USB)</li>\r\n        </List>\r\n\r\n        <SubTitle>Sensor Connections:</SubTitle>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <Th>Sensor</Th>\r\n              <Th>ESP32 Pin</Th>\r\n              <Th>Notes</Th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <Td>DS18B20 (Temp)</Td>\r\n              <Td>GPIO 25</Td>\r\n              <Td>1-wire protocol, needs 4.7kΩ pull-up</Td>\r\n            </tr>\r\n            <tr>\r\n              <Td>TDS Sensor</Td>\r\n              <Td>GPIO 35</Td>\r\n              <Td>Analog input</Td>\r\n            </tr>\r\n            <tr>\r\n              <Td>DO Sensor</Td>\r\n              <Td>GPIO 34</Td>\r\n              <Td>Analog input</Td>\r\n            </tr>\r\n            <tr>\r\n              <Td>Turbidity Sensor</Td>\r\n              <Td>GPIO 32</Td>\r\n              <Td>Analog input</Td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n        <SubTitle>Setup Steps:</SubTitle>\r\n        <List>\r\n          <li>Connect sensors to the specified GPIO pins on the ESP32</li>\r\n          <li>Power the sensors using the 3.3V or 5V rail, depending on individual requirements</li>\r\n          <li>Use the temperature sensor for real-time compensation of TDS and DO readings</li>\r\n          <li>Apply signal conditioning in the code using averaging filters and calibration equations</li>\r\n          <li>View all sensor readings in real-time using the serial monitor for debugging and analysis</li>\r\n        </List>\r\n\r\n        <SubTitle>Calibration:</SubTitle>\r\n        <List>\r\n          <li>The turbidity sensor is calibrated using both manual testing and a quadratic model for increased accuracy</li>\r\n          <li>The TDS sensor uses a polynomial equation with built-in temperature correction</li>\r\n          <li>The DO sensor is calibrated using a two-point method and a temperature-dependent DO saturation table</li>\r\n        </List>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemInfo; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}